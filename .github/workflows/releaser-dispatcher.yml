name: "Helm Charts CI"

on:
  push:
    branches:
      - main
    paths:
      - charts/**/**
  workflow_dispatch:
    inputs:
      chartName:
        required: true
        description: "Name of Helm Chart to be released to the chart repo. Check the index/README for full list."

jobs:
  publish-ci:
    name: Tag and publish chart changes
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_dispatch' }}
    env:
      GNUPG_PASSPHARSE: ${{ secrets.RELEASES_GPG_PASSPHARSE }}
      GNUPG_KEY_BASE64: ${{ secrets.RELEASES_GPG_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure Git
        run: ./scripts/setup-ci

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.2.1
        env:
          CR_TOKEN: "${{ secrets.GH_SERVICE_ACCOUNT_API_KEY }}"
  update-charts:
    name: Update chart files
    runs-on: ubuntu-latest
    env:
      GNUPG_PASSPHARSE: ${{ secrets.RELEASES_GPG_PASSPHARSE }}
      GNUPG_KEY_BASE64: ${{ secrets.RELEASES_GPG_KEY }}
      GH_LOGIN: RecapTimeBot
      GH_TOKEN: ${{ secrets.GH_SERVICE_ACCOUNT_API_KEY }}
      GH_ACTIONS_MODE: true
    if: ${{ github.event_name == 'workflow_dispatch' }}
    steps:
      # Step 1: Checkout
      - uses: actions/checkout@v2

      # Step 2: Set up GPG commit signing and import
      # our Software Release GPG keys.
      - name: Set up GPG commit signing
        id: commitSigningStuff
        run: ./scripts/setup-ci
        env:
          RELEASES_GPG_PASSPHARSE: ${{ env.GNUPG_PASSPHARSE }}
          RELEASES_GPG_KEY: ${{ env.GNUPG_KEY_BASE64 }}

      # Step 3: Update chart
      - name: Update chart
        run: DEBUG=1 ./scripts/update-chart ${{ github.event.inputs.chartName }}
        env:
          RELEASES_GPG_PASSPHARSE: ${{ env.GNUPG_PASSPHARSE }}

      # If failed, run this
      - name: Notify people over Discord and Guilded for failed CI
        if: ${{ failure() }}
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: |
            ${{ secrets.NOTIFICATIONS_DISCORD_WEBHOOK }}
            ${{ secrets.NOTIFICATIONS_GUILDED_WEBHOOK }}
          status: ${{ job.status }}
          title: "Helm Charts Updater"
          description: "Updated charts file for ${{ github.event.inputs.chartName }} for Chart Releaser bot."
          nofail: false
          nodetail: false
          username: Github Actions
          avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png

      - name: Notify people over Discord and Guilded for successfully release
        if: ${{ success() }}
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: |
            ${{ secrets.NOTIFICATIONS_DISCORD_WEBHOOK }}
            ${{ secrets.NOTIFICATIONS_GUILDED_WEBHOOK }}
          status: ${{ job.status }}
          title: "Helm Charts Releaser"
          description: "Published latest Helm Chart for ${{ github.event.inputs.chartName }} to Code Server Boilerplates' Helm Charts repo."
          nofail: false
          nodetail: false
          username: Github Actions
          avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
